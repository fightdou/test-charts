apiVersion: batch/v1
kind: Job
metadata:
  name: keystone-cerdential-setup
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
    spec:
      containers:
        - name: keystone-cerdential-setup
          image: {{ template "keystone.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /bin/sh
            - -c
            - |
              /tmp/keystone.sh
              python /tmp/fernet-manage.py credential_setup
          env:
            - name: KEYSTONE_USER
              value: keystone
            - name: KEYSTONE_GROUP
              value: keystone
            - name: KUBERNETES_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: KEYSTONE_KEYS_REPOSITORY
              value: /etc/keystone/credential-keys/
            - name: KEYSTONE_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: keystone-database-password
                  name: {{ .Values.mariadb.auth.existingSecret }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: rabbitmq-password
                  name: {{ .Values.rabbitmq.auth.existingPasswordSecret }}
          volumeMounts:
          - mountPath: /tmp
            name: pod-tmp
          - mountPath: /etc/keystone
            name: etckeystone
          - mountPath: /etc/keystone/credential-keys/
            name: credential-keys
          - mountPath: /tmp/fernet-manage.py
            name: keystone-bin
            subPath: fernet-manage.py
          - mountPath: /tmp/keystone.sh
            name: keystone-etc
            subPath: keystone.sh
      initContainers:
        - name: init
          image: {{ template "entrypoint.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - kubernetes-entrypoint
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PATH
              value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
            - name: DEPENDENCY_JOBS
              value: {{ include "helm-toolkit.utils.joinListWithComma" .Values.dependencies.keystone_api.jobs }}
      restartPolicy: OnFailure
      serviceAccount: keystone-api
      serviceAccountName: keystone-api
      volumes:
      - emptyDir: {}
        name: pod-tmp
      - emptyDir: {}
        name: credential-keys
      - emptyDir: {}
        name: etckeystone
      - configMap:
          defaultMode: 365
          name: keystone-bin
        name: keystone-bin
      - configMap:
          defaultMode: 365
          name: keystone-etc
        name: keystone-etc
